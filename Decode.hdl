// File name: Decode.hdl

/**
 * The instruction decoder determines the type of instruction (a or c)
 * and decodes those instructions.
 * The input in[16] is the instruction to be decoded.
 * The outputs are used as follows:
 *   type:      0 if a-instruction, 1 if c-instruction. 
 *   a:         Determines whether the ALU input uses A (0) or Memory[A] (1)
 *   c1 .. c6:  Op-code wires to ALU
 *   d1 d2 d3:  Destination wires to the load pins of A,D registers and Memory
 *   j1 j2 j3:  Jump wires to Jump Unit
 * For a-instructions, d1 should be 1, all other outputs should be 0
 * For c-instructions, outputs should correspond to their bits in the c-instruction
 */

CHIP Decode {

    IN  in[16];             // instruction to decode

    OUT type,               // Instruction type
        a,                  // ALU A/M
        c1,c2,c3,c4,c5,c6,  // Op-code wires to ALU
        d1,d2,d3,           // Destination wires
        j1,j2,j3;           // Jump wires

PARTS:
    // Put your code here:
   Or (a = in[15], b = false, out = type, out = insel);
   Mux (a = false, b = in[12], sel = insel, out = a);
   Mux (a = false, b = in[11], sel = insel, out = c1);
   Mux (a = false, b = in[10], sel = insel, out = c2);
   Mux (a = false, b = in[9], sel = insel, out = c3);
   Mux (a = false, b = in[8], sel = insel, out = c4);
   Mux (a = false, b = in[7], sel = insel, out = c5);
   Mux (a = false, b = in[6], sel = insel, out = c6);
   Mux (a = true, b =  in[5], sel = insel, out = d1);
   Mux (a = false, b = in[4], sel = insel, out = d2);
   Mux (a = false, b = in[3], sel = insel, out = d3);
   Mux (a = false, b = in[2], sel = insel, out = j1);
   Mux (a = false, b = in[1], sel = insel, out = j2);
   Mux (a = false, b = in[0], sel = insel, out = j3);   
}