// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux4Way (in = load, sel = address[11..13], a = outa, b = outb, c = outc, d = outd);
    RAM4K (in = in, load = outa, address = address[0..10], out = out1);
    RAM4K (in = in, load = outb, address = address[0..10], out = out2);
    RAM4K (in = in, load = outc, address = address[0..10], out = out3);
    RAM4K (in = in, load = outd, address = address[0..10], out = out4);
    Mux4Way16 (a = out1, b = out2, c = out3, d = out4, sel = address[11..13], out = out);
}